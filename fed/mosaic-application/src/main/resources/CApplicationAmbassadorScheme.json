{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "CApplicationAmbassadorScheme",
    "description": "This schema describes the JSON file structure for the application configuration, which is used to configure parameters for the creation of the simulation unit.",
    "properties": {
        "messageCacheTime": {
            "description": "To free some memory, use a time limit for cached V2XMessages. Given in nanoseconds if defined as an integer. If the value is defined as a string the unit of measurement can be specified (e.g. '3 minutes'). Set to '0' for an infinity cache.",
            "default": "30 s",
            "anyOf": [
                { "type": "string", "maxLength": 20 },
                { "type": "integer", "minimum": 0 }
            ]
        },
        "encodePayloads": {
            "description": "If set to true, messages (e.g. CAMs, DENMs, or SPATMs) will be encoded to a byte array. If set to false, only their length is stored which may help to improve performance on large-scale scenarios.",
            "default": true,
            "type": "boolean"
        },
        "eventSchedulerThreads": {
            "description": "Number of threads used by the MultiThreadedEventScheduler. Using more than 1 thread would result in undetermined behavior. Repeating the simulation could result in different simulation results, if some processed event uses the random number generator.",
            "default": 1,
            "type": "integer",
            "minimum": 1
        },
        "navigationConfiguration": {
            "description": "Configuration options for the route calculation.",
            "$ref": "#/definitions/routingByType"
        },
        "perceptionConfiguration": {
            "description": "Configuration options for perception backend",
            "$ref": "#/definitions/perceptionConfiguration"
        }
    },
    "definitions": {
        "routingByType": {
            "title": "routingByType",
            "description": "Object to define the configuration for the route calculation.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Defines the routing implementation to be used for navigation. Possible values are 'database' or 'no-routing', or any full-qualified java class name.",
                    "type": "string"
                },
                "source": {
                    "description": "The source for the route calculation, e.g. the path to the database containing the road network.",
                    "type": "string"
                }
            }
        },
        "perceptionConfiguration": {
            "title": "perceptionConfiguration",
            "description": "Configuration options for perception backend",
            "type": "object",
            "properties": {
                "vehicleIndex": {
                    "description": "The underlying data structure for the spatial index for vehicles",
                    "$ref": "#/definitions/vehicleIndex"
                },
                "trafficLightIndex": {
                    "description": "The underlying data structure for the spatial index for traffic lights",
                    "$ref": "#/definitions/trafficLightIndex"
                },
                "wallIndex": {
                    "description": "The underlying data structure for the spatial index for building walls",
                    "$ref": "#/definitions/wallIndex"
                },
                "measurePerformance": {
                    "description": "If set to true, a PerceptionPerformance.csv is generated with detailed information about execution calls of the perception backend.",
                    "type": "boolean"
                },
                "perceptionArea": {
                    "description": "Area used to define the bounds of the perception index. Useful if only part of your scenario needs to evaluate perception.",
                    "$ref": "#/definitions/geoRectangle"
                }
            }
        },
        "vehicleIndex": {
            "title": "vehicleIndex",
            "description": "Class providing the spatial index for the perception of vehicles.",
            "type": "object",
            "oneOf": [
                { "$ref": "#/definitions/vehicleMap" },
                { "$ref": "#/definitions/vehicleTree" },
                { "$ref": "#/definitions/vehicleGrid" },
                { "$ref": "#/definitions/sumoIndex" }
            ]
        },
        "vehicleMap": {
            "title": "vehicleMap",
            "description": "Trivial spatial vehicle index using a hash map to store vehicles.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "VehicleMap" ]
                }
            },
            "required": [ "type" ]
        },
        "vehicleGrid": {
            "title": "vehicleGrid",
            "description": "Spatial vehicle index using a grid structure to store vehicles.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "VehicleGrid" ]
                },
                "cellWidth": {
                    "description": "Width of a grid cell. [m]",
                    "anyOf": [
                        { "type": "number", "minimum": 0 },
                        { "type": "string", "minLength": 2 }
                    ]
                },
                "cellHeight": {
                    "description": "Height of a grid cell. [m]",
                    "anyOf": [
                        { "type": "number", "minimum": 0 },
                        { "type": "string", "minLength": 2 }
                    ]
                }
            },
            "required": [ "type" ]
        },
        "vehicleTree": {
            "title": "vehicleTree",
            "description": "Spatial vehicle index using a quad tree structure to store vehicles.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "VehicleTree" ]
                },
                "splitSize": {
                    "description": "The maximum amount of vehicles in one leaf before it gets split into four sub-leaves.",
                    "type": "number",
                    "minimum": 0
                },
                "maxDepth": {
                    "description": "Maximum depth of the quad tree.",
                    "type": "number",
                    "minimum": 0
                }
            },
            "required": [ "type" ]
        },
        "sumoIndex": {
            "title": "sumoIndex",
            "description": "Class setting the index provider to use SUMO's built-in functions (see  context subscription)",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "SumoIndex" ]
                }
            }
        },
        "trafficLightIndex": {
            "title": "trafficLightIndex",
            "description": "Class providing the spatial index for the perception of traffic lights.",
            "type": "object",
            "oneOf": [
                { "$ref": "#/definitions/trafficLightMap" },
                { "$ref": "#/definitions/trafficLightTree" }
            ]
        },
        "trafficLightMap": {
            "title": "trafficLightMap",
            "description": "Trivial spatial index using a hash map to store traffic lights.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "TrafficLightMap" ]
                }
            },
            "required": [ "type" ]
        },
        "trafficLightTree": {
            "title": "trafficLightTree",
            "description": "Spatial index using a kd-tree structure to store traffic lights.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "TrafficLightTree" ]
                }
            },
            "bucketSize": {
                "description": "The maximum amount of traffic lights in one leaf before it gets split.",
                "type": "number",
                "minimum": 0
            },
            "required": [ "type" ]
        },
        "wallIndex": {
            "title": "wallIndex",
            "description": "Class providing the spatial index for the perception of building walls.",
            "type": "object",
            "oneOf": [
                { "$ref": "#/definitions/wallTree" }
            ]
        },
        "wallTree": {
            "title": "wallTree",
            "description": "Spatial index using a kd-tree structure to store building walls.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the spatial index.",
                    "type": "string",
                    "enum": [ "WallTree" ]
                }
            },
            "bucketSize": {
                "description": "The maximum amount of building walls in one leaf before it gets split.",
                "type": "number",
                "minimum": 0
            },
            "required": [ "type" ]
        },
        "geoPoint": {
            "title": "geoPoint",
            "description": "Object to define geographical point coordinates.",
            "type": "object",
            "properties": {
                "longitude": {
                    "description": "East-west position of a point on earth.",
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "latitude": {
                    "description": "North-south position of a point on earth.",
                    "type": "number",
                    "maximum": 90,
                    "minimmum": -90
                }
            },
            "required": [ "longitude", "latitude" ]
        },
        "geoRectangle": {
            "title": "geoRectangle",
            "description": "Object to define an immutable pair of two different geoPoints. Together they form a rectangular area.",
            "type": "object",
            "properties": {
                "a": {
                    "description": "GeoPoint defining the north-western vertex of the rectangle.",
                    "$ref": "#/definitions/geoPoint"
                },
                "b": {
                    "description": "GeoPoint defining the south-east vertex of the rectangle.",
                    "$ref": "#/definitions/geoPoint"
                }
            },
            "required": [ "a", "b" ]
        }
    }
}
